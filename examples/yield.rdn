macro-env yieldFunction yield {
	local (macro-env#ARG yield) {
		macro-env#ARG yield = f(val) {
			$f(k) {
				macro-env#FUNC = k;
				val;
			};
		};

		f(val) {
			#f: macro-env#FUNC(if macro-env#ARG yield then macro-env#ARG yield else val);
		};
	};
};

foo = yieldFunction {
	yield 1;
	yield 2;
	yield 3;
	"DONE";
};

print(foo());
print(foo());
print(foo());
print(foo());

wait(500);

fib = yieldFunction {
	local loop (a = 1, b = 1) {
		yield b;
		loop(b, a + b);
	};
};

local loop (i = 0) if i < 50 {
	print(fib());
	loop(i + 1);
};
